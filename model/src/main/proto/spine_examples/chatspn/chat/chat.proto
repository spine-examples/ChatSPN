/*
 * Copyright 2023, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine_examples.chatspn.chat;

import "spine/options.proto";

option (type_url_prefix) = "type.chatspn.spine.io";
option java_package = "io.spine.examples.chatspn.chat";
option java_outer_classname = "ChatProto";
option java_multiple_files = true;

import "spine/core/user_id.proto";
import "spine_examples/chatspn/identifiers.proto";

// A chat between two or more users.
message Chat {
    option (entity) = { kind: AGGREGATE };

    // The ID of the chat.
    ChatId id = 1;

    // List of the chat members.
    repeated spine.core.UserId member = 2 [(required) = true, (distinct) = true];

    // The type of the chat.
    //
    // Personal chat is responsible for communication between only 2 users.
    // Personal chat doesn't have a name, avatar, etc.
    // Members in the personal chat have the same permissions.
    // Members can't leave from personal chat, only delete it.
    //
    // Group chat is responsible for communication between 2 or more users.
    // Group chat may have editable name, avatar, etc.
    // Members in group chat may have different permissions.
    // Members with the appropriate permissions can add new users to the group chat.
    // Members can leave a group chat, and the chat is only deleted when the last member has left.
    //
    ChatType type = 3;

    enum ChatType {
        CT_PERSONAL = 0;
        CT_GROUP = 1;
    }

    // The name of the chat.
    string name = 4;
}
